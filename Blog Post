SMT Z3 is a constraint solver that can be applied to a multitude of problems including static checking, test case generation, and predicate abstraction. In this code, I used SMT Z3 to solve a 2x2 Sudoku puzzle. Upon declaring four variables that represent the different cells in a sudoku puzzle, I specified constraints that all sudoku puzzles face. Using “assert” we can restrict the program to strictly use numbers from 1-4, and ensure no two values in the same row or column repeat. This ensures that each cell of the Sudoku puzzle has a unique number. By using the check-sat command, a model is returned if a solution exists. This logic can be scaled to larger sudoku puzzles with additional assertions that account for a broader range of values. 
